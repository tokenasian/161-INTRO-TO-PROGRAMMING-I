# Author: Matthew Armstrong
# Date:
# Description:
class AddThreeGame:
    def __init__(self):
        self._first_list = []
        self._second_list = []
        self._first_player = 0
        self._second_player = 0
        self._input_number = []
        self._valid_choices = [1, 2, 3, 4, 5, 6, 7, 8, 9]
        self._current_state = "UNFINISHED", "FIRST_WON", "SECOND_WON", "DRAW"

    def get_current_state(self):
        return self._current_state

    def make_move(self, current_player, user_input):
        if user_input in self._input_number:
            return False

        if user_input < 1 or user_input > 9:
            return False

        if current_player == "first":
            self._input_number.append(user_input)
            self._first_list.append(user_input)
        else:
            self._second_list.append(user_input)

        if self._first_player == 15 and self._second_player == 15:
            self._current_state = "DRAW"

        if sum(self._first_list) == 15:
            self._current_state = "FIRST_WON"
        if sum(self._second_list) == 15:
            self._current_state = "SECOND_WON"

        return True


game = AddThreeGame()


while True:
    while True:
        num = int(input("First: "))
        if game.make_move("first", num):
            break
        else:
            num = int(input("That entry is invalid. Try again: "))
    while True:
        num = int(input("Second: "))
        if game.make_move("second", num):
            break
        else:
            num = int(input("That entry is invalid. Try again: "))

    state = game.get_current_state()
    if state == "UNFINISHED":
        print("We have unfinished business, come back for more")

    if state == "FIRST_WON":
        print("Player 1 is the winner. Player 2 is a loser.")

    if state == "SECOND_WON":
        print("Player 2 is the winner. Player 1 is a loser.")

    if state == "DRAW":
        print("Tie.")
